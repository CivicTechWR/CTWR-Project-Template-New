name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Adjust based on your project's technology stack
        node-version: [18.x, 20.x]
        # python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    # Example for Node.js projects
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    # Example for Python projects (uncomment if needed)
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: ${{ matrix.python-version }}

    # - name: Install Python dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt

    # - name: Run Python tests
    #   run: pytest

    # Accessibility testing
    - name: Run accessibility tests
      run: |
        # Add accessibility testing commands here
        # Example: npm run test:a11y
        echo "Add accessibility testing commands"

    # Security scanning
    - name: Run security audit
      run: |
        # Add security scanning commands here
        # Example: npm audit
        echo "Add security scanning commands"

  civic-compliance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check for sensitive data
      run: |
        # Check for potential secrets or sensitive data
        if grep -r "password\|secret\|key\|token" --include="*.js" --include="*.py" --include="*.md" --exclude-dir=node_modules --exclude-dir=.git .; then
          echo "⚠️ Potential sensitive data found. Please review."
          exit 1
        else
          echo "✅ No obvious sensitive data found."
        fi

    - name: Verify open source license
      run: |
        if [ ! -f LICENSE ]; then
          echo "⚠️ No LICENSE file found. Civic tech projects should have clear licensing."
          exit 1
        else
          echo "✅ LICENSE file found."
        fi

    - name: Check documentation completeness
      run: |
        required_docs=("README.md" "docs/CONTRIBUTING.md" "docs/DVF_SCORECARD.md")
        for doc in "${required_docs[@]}"; do
          if [ ! -f "$doc" ]; then
            echo "⚠️ Missing required documentation: $doc"
            exit 1
          fi
        done
        echo "✅ Required documentation found."